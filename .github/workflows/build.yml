name: Publish Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    permissions:
      contents: write

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: macos-latest
            file: xwarp-${{ github.ref_name }}-macos-arm64.dmg
            arch: arm64
          - os: macos-latest
            file: xwarp-${{ github.ref_name }}-macos-x64.dmg
            arch: x64
          - os: windows-latest
            file: xwarp-${{ github.ref_name }}-windows-arm64.exe
            arch: arm64
          - os: windows-latest
            file: xwarp-${{ github.ref_name }}-windows-x64.exe
            arch: x64
          - os: ubuntu-latest
            file: xwarp-${{ github.ref_name }}-linux-arm64.AppImage
            arch: arm64
          - os: ubuntu-latest
            file: xwarp-${{ github.ref_name }}-linux-x86_64.AppImage
            arch: x64


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Intstall Dependencies
        run: npm ci

      - name: Build MacOS-arm64 App
        if: (matrix.os == 'macos-latest') && (matrix.arch == 'arm64')
        run: npm run release:macos:arm64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build MacOS-x64 App
        if: (matrix.os == 'macos-latest') && (matrix.arch == 'x64')
        run: npm run release:macos:x64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Windows-arm64 App
        if: (matrix.os == 'windows-latest') && (matrix.arch == 'arm64')
        run: npm run release:windows:arm64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Windows-x64 App
        if: (matrix.os == 'windows-latest') && (matrix.arch == 'x64')
        run: npm run release:windows:x64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Linux-arm64 App
        if: (matrix.os == 'ubuntu-latest') && (matrix.arch == 'arm64')
        run: npm run release:linux:arm64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Linux-x64 App
        if: (matrix.os == 'ubuntu-latest') && (matrix.arch == 'x64')
        run: npm run release:linux:x64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload binaries to release
      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/${{ github.ref_name }}/${{ matrix.file }}
          asset_name: ${{ matrix.file }}
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
