name: Publish Release

on:
    push:
      tags:
        - 'v*'

jobs:
    build_and_release:
        runs-on: macos-latest
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
    
          - name: Set up Node.js
            uses: actions/setup-node@v4
            with:
              node-version: 20.x
    
          - name: install dependencies
            run: npm install
    
          - name: Package Electron app for Linux
            if: matrix.os == 'ubuntu-latest'
            run: npm run release:linux
            env:
              GH_TOKEN: ${{ secrets.GH_TOKEN }}

          - name: Package Electron app for Mac
            if: matrix.os == 'macos-latest'
            run: npm run release:macos
            env:
              GH_TOKEN: ${{ secrets.GH_TOKEN }}

          - name: Package Electron app for Windows
            if: matrix.os == 'windows-latest'
            run: npm run release:windows
            env:
              GH_TOKEN: ${{ secrets.GH_TOKEN }}

          - name: Determine artifact filename
            id: set_artifact_filename
            run: |
                if [ "${{ runner.os }}" = "Linux" ]; then
                    echo "::set-output name=filename::dist_electron/*.AppImage"
                    echo "::set-output name=appName::XWarp.AppImage"
                elif [ "${{ runner.os }}" = "macOS" ]; then
                    echo "::set-output name=filename::dist_electron/*.dmg"
                    echo "::set-output name=appName::XWarp.dmg"
                elif [ "${{ runner.os }}" = "Windows" ]; then
                    echo "::set-output name=filename::dist_electron/*.exe"
                    echo "::set-output name=appName::XWarp.exe"
                fi
            shell: bash

          # Publish build
          - name: Create a Release
            if: github.run_number == 1
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
            with:
              tag_name: ${{ github.ref }}
              release_name: XWarp-${{ github.ref }}
              draft: false
              prerelease: false
    
          # # Upload binaries to release
          # - name: Upload Release Asset
          #   uses: svenstaro/upload-release-action@v2
          #   with:
          #       repo_token: ${{ secrets.GITHUB_TOKEN }}
          #       # file: ${{github.workspace}}/${{ steps.set_artifact_filename.outputs.filename }}
          #       file: ./${{ steps.set_artifact_filename.outputs.filename }}
          #       asset_name: ${{ steps.set_artifact_filename.outputs.appName }}
          #       tag: ${{ github.ref }}
          #       overwrite: true
          #       file_glob: true