import { create } from "zustand";
import { useSettings } from "./useSettings";
import axios from "axios";

export const IFConfigCountryFlag = [
  { id: "AT", flag: "ðŸ‡¦ðŸ‡¹" },
  { id: "BE", flag: "ðŸ‡§ðŸ‡ª" },
  { id: "BG", flag: "ðŸ‡§ðŸ‡¬" },
  { id: "BR", flag: "ðŸ‡§ðŸ‡·" },
  { id: "CA", flag: "ðŸ‡¨ðŸ‡¦" },
  { id: "CH", flag: "ðŸ‡¨ðŸ‡³" },
  { id: "CZ", flag: "ðŸ‡¨ðŸ‡¿" },
  { id: "DE", flag: "ðŸ‡©ðŸ‡ª" },
  { id: "DK", flag: "ðŸ‡©ðŸ‡°" },
  { id: "EE", flag: "ðŸ‡ªðŸ‡ª" },
  { id: "ES", flag: "ðŸ‡ªðŸ‡¸" },
  { id: "FI", flag: "ðŸ‡«ðŸ‡®" },
  { id: "FR", flag: "ðŸ‡«ðŸ‡·" },
  { id: "GB", flag: "ðŸ‡¬ðŸ‡§" },
  { id: "HU", flag: "ðŸ‡­ðŸ‡º" },
  { id: "IR", flag: "ðŸ‡®ðŸ‡·" },
  { id: "IE", flag: "ðŸ‡®ðŸ‡ª" },
  { id: "IN", flag: "ðŸ‡®ðŸ‡³" },
  { id: "IT", flag: "ðŸ‡®ðŸ‡¹" },
  { id: "JP", flag: "ðŸ‡¯ðŸ‡µ" },
  { id: "LV", flag: "ðŸ‡±ðŸ‡»" },
  { id: "NL", flag: "ðŸ‡³ðŸ‡±" },
  { id: "NO", flag: "ðŸ‡³ðŸ‡´" },
  { id: "PL", flag: "ðŸ‡µðŸ‡±" },
  { id: "RO", flag: "ðŸ‡·ðŸ‡´" },
  { id: "RS", flag: "ðŸ‡·ðŸ‡¸" },
  { id: "SE", flag: "ðŸ‡¸ðŸ‡ª" },
  { id: "SG", flag: "ðŸ‡¸ðŸ‡¬" },
  { id: "SK", flag: "ðŸ‡¸ðŸ‡°" },
  { id: "UA", flag: "ðŸ‡ºðŸ‡¦" },
  { id: "US", flag: "ðŸ‡ºðŸ‡¸" },
];

type WarpProps = {
  log: string;
  connected: boolean;
  connecting: boolean;
  connect: () => void;
  disconnect: () => void;
  clearLogs: () => void;
  ifconfig?: any | null;
};

export const useWarp = create<WarpProps>()((set, get) => ({
  log: "",
  connected: false,
  connecting: false,
  connect: () => {
    if (get().connecting) {
      get().disconnect();
      window.electron.disconnect();
      return;
    }
    set({ connecting: true });
    window.electron.logs((data) => {
      set({ log: data });
    });
    window.electron.connect(
      useSettings.getState().getSettings(),
      (_, connected) => {
        if (connected) {
          set({ connected: true, connecting: false });
          axios.get("https://ifconfig.co/json").then((res) => {
            set({ ifconfig: res.data });
          });
        } else {
          set({ connected: false, connecting: false });
        }
      }
    );
  },
  disconnect: () => {
    set({ log: "", connected: false, connecting: false, ifconfig: null });
    window.electron.disconnect();
  },
  clearLogs: () => {
    set({ log: "" });
  },
  ifconfig: null,
}));
